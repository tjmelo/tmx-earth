{"version":3,"file":"static/js/484.f9274e2a.chunk.js","mappings":"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","sources":["utils/parse-number.ts","components/Mount/sectionList.tsx","webpack://tmx-earth/./src/styles/components.module.scss?4430","components/Mount/index.ts","components/Mount/mountListCountries.tsx","components/Countries/InfoCountries.tsx","components/Countries/index.ts"],"sourcesContent":["export const parseNumber = (element: number) => {\n    let number = element.toString().split(\"\"),\n        qtdeDivisor = Math.floor(number.length / 3),\n        arr = []\n\n    for (let i = 0; i < qtdeDivisor; i++) {\n        let ind = number.length - 3 * (i + 1) - 1\n        if (ind !== -1) arr.push(ind)\n    }\n\n    for (let i = 0; i < arr.length; i++)\n        number.splice(arr[i] + 1, 0, \".\")\n    \n    return number.join(\"\")\n}\n","import { ISectionList } from \"../../interfaces\"\n\nexport const SectionList:React.FC<ISectionList> = ({data, children, subdata}) => {\n    return(\n        <div className={`col-xs-12 my-3 border-bottom`}>\n            <span className=\"text-secondary\">\n            { children }\n            </span>\n            <br />\n            <strong className=\"text-primary\">\n            { data }\n            { subdata \n            ?  <sup> { subdata } </sup>\n            : '' }\n            </strong>\n            <br />\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"flag\":\"components_flag__Q-06q\",\"name\":\"components_name__kJf3t\",\"borders\":\"components_borders__G20cY\"};","import { MountListCountries } from \"./mountListCountries\";\n\nexport default MountListCountries\n","import { parseNumber } from '../../utils'\nimport { SectionList } from './sectionList';\nimport { useEffect, useState } from \"react\";\n\nimport style from \"../../styles/components.module.scss\"\nimport { IMountListCountries } from '../../interfaces';\n\nexport const MountListCountries:React.FC<IMountListCountries> = ({ data }) => {\n  \n  const [nativeName, setNativeName] = useState<string>()\n  const [currencies, setCurrencies] = useState<string>()\n\n  useEffect(\n    () => {\n      const getNative = (data: object) => {\n        for( const native in data) return native\n      }\n      setNativeName(getNative(data.name.nativeName))\n      setCurrencies(getNative(data.currencies))\n    }, [ data ]\n  )\n\n  return (\n    <div className=\"row my-5\">\n      <div\n        className={`col-xs-12 d-flex mb-2 ${style.flag}`}\n      >\n        <figure>\n          <img\n            src={data.flags.svg}\n            alt={data.name.official}\n          />\n        </figure>\n        <span className={`text-primary ${style.name}`}>\n          {data.name.common}\n        </span>\n        { data.coatOfArms.svg \n          && (\n            <img\n              width={30}\n              height={30}\n              src={data.coatOfArms.svg}\n              alt={data.name.official}\n            />\n          )\n        }\n      </div>\n\n      <SectionList \n        data={nativeName ? data.name.nativeName[nativeName].common: ''}>\n        Native name:\n      </SectionList>\n\n      <SectionList \n        data={ data.capital || \"-----\" }>\n        Capital:\n      </SectionList>\n\n      <SectionList \n        data={ data.region || \"-----\" }>\n        Region:\n      </SectionList>\n\n      <SectionList \n        data={ data.subregion || \"-----\" }>\n        Subregion:\n      </SectionList>\n\n      <SectionList \n        data={ data.languages ? Object.values(data.languages)[0] : \"-----\" }>\n        Languages:\n      </SectionList>\n\n      <SectionList \n        data={ currencies && data.currencies[currencies].name }\n        subdata={currencies && data.currencies[currencies].symbol}>\n        Currencies:\n      </SectionList>\n\n      <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-4 mb-3 border-bottom\">\n        <span className=\"text-secondary\">Borders: </span>{\" \"}\n        <br />\n        {data.borders ? (\n          data.borders.map((border: any, idx: any) => {\n            return (\n              <strong\n                key={idx}\n                className={`text-primary ${style.borders}`}\n              >\n                <b>{border} </b>\n              </strong>\n            )\n          })\n        ) : (\n          <strong className=\"text-primary\">-----</strong>\n        )}\n      </div>\n\n      <SectionList \n        data={ parseNumber(data.population) || \"-----\" }>\n        Poulation:\n      </SectionList>\n\n      <SectionList \n        data={ parseNumber(data.area) || \"-----\" }>\n        Area:\n      </SectionList>\n\n      <SectionList \n        data={ data.tld || \"-----\" }>\n        Domain:\n      </SectionList>\n        \n    </div>\n  )\n}\n","import { SetStateAction, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios, { AxiosResponse } from 'axios';\n\nimport MountListCountries from '../Mount';\nimport Loading from '../Load';\n\nimport { ICountry } from '../../interfaces';\n\nexport const InfoCountries = () => {\n\n    const country = useSelector((state: ICountry ) => state.country.country);\n    const [info, setInfo] = useState<[] | SetStateAction<any>>([]);\n\n    const getData = async (fetchData: Promise<AxiosResponse<any, any>>) => {\n        try {\n            const { data } = await fetchData;\n            setInfo(data?.map((el:{cca2: string}) => <MountListCountries data={el} key={el.cca2}/> ))\n        } catch (e) {\n            console.error(e)\n        }\n    }\n\n    useEffect(() => {    \n        setInfo(<div className=\"alert alert-primary my-2\">Getting data...</div>)\n\n        if (!country.length || country === 'Type the name of a country'){\n            setInfo(<Loading type='warning'>Type the name of a country!</Loading>)\n        } else {\n            const data = axios.get(`https://restcountries.com/v3.1/name/${country}?fullText=true`)\n            getData(data)\n        }\n    }, [country])\n\n    return(\n        <section className=\"container\">\n            { info }\n        </section>\n    )\n}\n","import { InfoCountries } from \"./InfoCountries\";\n\nexport default InfoCountries\n"],"names":["parseNumber","element","number","toString","split","qtdeDivisor","Math","floor","length","arr","i","ind","push","splice","join","SectionList","_ref","data","children","subdata","_jsxs","className","_jsx","nativeName","setNativeName","useState","currencies","setCurrencies","useEffect","getNative","native","name","concat","style","src","flags","svg","alt","official","common","coatOfArms","width","height","capital","region","subregion","languages","Object","values","symbol","borders","map","border","idx","population","area","tld","InfoCountries","country","useSelector","state","info","setInfo","async","fetchData","el","MountListCountries","cca2","e","console","error","getData","axios","get","Loading","type"],"sourceRoot":""}