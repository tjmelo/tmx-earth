{"version":3,"file":"static/js/618.626eac2a.chunk.js","mappings":"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","sources":["utils/parse-number.ts","components/Mount/section-list.tsx","webpack://tmx-earth/./src/styles/components.module.scss?200c","components/Mount/index.ts","components/Mount/mountListCountries.tsx","components/Countries/index.ts","components/Countries/InfoCountries.tsx"],"sourcesContent":["export const parseNumber = (element: number) => {\n    let number = element.toString().split(\"\"),\n        qtdeDivisor = Math.floor(number.length / 3),\n        arr = []\n\n    for (let i = 0; i < qtdeDivisor; i++) {\n        let ind = number.length - 3 * (i + 1) - 1\n        if (ind !== -1) arr.push(ind)\n    }\n\n    for (let i = 0; i < arr.length; i++)\n        number.splice(arr[i] + 1, 0, \".\")\n    return number.join(\"\")\n}\n","\ninterface CSectionList{\n    data: any,\n    subdata?: any,\n    children: string\n}\n\nexport const SectionList:React.FC<CSectionList> = ({data, children, subdata}) => {\n    return(\n        <div className={`col-xs-12 my-3 border-bottom`}>\n            <span className=\"text-secondary\">\n            { children }\n            </span>\n            <br />\n            <strong className=\"text-primary\">\n            { data }\n            { subdata \n            ?  <sup> { subdata } </sup>\n            : '' }\n            </strong>\n            <br />\n        </div>\n\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"flag\":\"components_flag__Q-06q\",\"name\":\"components_name__kJf3t\",\"borders\":\"components_borders__G20cY\"};","import { MountListCountries } from \"./mountListCountries\";\n\nexport default MountListCountries\n","import { parseNumber } from '../../utils'\nimport { SectionList } from './section-list';\nimport { useEffect, useState } from \"react\";\n\nimport style from \"../../styles/components.module.scss\"\n\ninterface CMountListCountries {\n  data: any\n}\n\nexport const MountListCountries:React.FC<CMountListCountries> = ({ data }) => {\n  \n  const [nativeName, setNativeName] = useState<string>()\n  const [currencies, setCurrencies] = useState<string>()\n\n  useEffect(\n    () => {\n      const getNative = (data: object): any => {\n        for( const native in data) return native\n      }\n      setNativeName(getNative(data.name.nativeName))\n      setCurrencies(getNative(data.currencies))\n    }, [ data ]\n  )\n\n  return (\n    <div className=\"row my-5\">\n      <div\n        className={`col-xs-12 d-flex mb-2 ${style.flag}`}\n      >\n        <figure>\n          <img\n            src={data.flags.svg}\n            alt={data.name.official}\n          />\n        </figure>\n        <span className={`text-primary ${style.name}`}>\n          {data.name.common}\n        </span>\n        <img\n          width={30}\n          height={30}\n          src={data.coatOfArms.svg}\n          alt={data.name.official}\n        />\n      </div>\n\n      <SectionList \n        data={nativeName ? data.name.nativeName[nativeName].common: ''}>\n        Native name:\n      </SectionList>\n\n      <SectionList \n        data={ data.capital || \"-----\" }>\n        Capital:\n      </SectionList>\n\n      <SectionList \n        data={ data.region || \"-----\" }>\n        Region:\n      </SectionList>\n\n      <SectionList \n        data={ data.subregion || \"-----\" }>\n        Subregion:\n      </SectionList>\n\n      <SectionList \n        data={ Object.values(data.languages)[0] || \"-----\" }>\n        Languages:\n      </SectionList>\n\n      <SectionList \n        data={ currencies && data.currencies[currencies].name }\n        subdata={currencies && data.currencies[currencies].symbol}>\n        Currencies:\n      </SectionList>\n\n      <div className=\"col-xs-12 col-sm-6 col-md-4 col-lg-4 mb-3 border-bottom\">\n        <span className=\"text-secondary\">Borders: </span>{\" \"}\n        <br />\n        {data.borders ? (\n          data.borders.map((border: any, idx: any) => {\n            return (\n              <strong\n                key={idx}\n                className={`text-primary ${style.borders}`}\n              >\n                <b>{border} </b>\n              </strong>\n            )\n          })\n        ) : (\n          <strong className=\"text-primary\">-----</strong>\n        )}\n      </div>\n\n      <SectionList \n        data={ parseNumber(data.population) || \"-----\" }>\n        Poulation:\n      </SectionList>\n\n      <SectionList \n        data={ parseNumber(data.area) || \"-----\" }>\n        Area:\n      </SectionList>\n\n      <SectionList \n        data={ data.tld || \"-----\" }>\n        Domain:\n      </SectionList>\n        \n    </div>\n  )\n}\n","import { InfoCountries } from \"./InfoCountries\";\n\nexport default InfoCountries\n","import { SetStateAction, useEffect, useState } from 'react';\nimport { RootStateOrAny, useSelector } from 'react-redux';\nimport axios from 'axios';\n\nimport MountListCountries from '../Mount';\nimport Loading from '../Load';\n\nexport const InfoCountries = () => {\n\n    const country = useSelector((state: RootStateOrAny) => state.country.country);\n    const [info, setInfo] = useState<[]|SetStateAction<any>>([]);\n\n    useEffect(() => {    \n        // Export all details by countries...\n        setInfo(<div className=\"alert alert-primary\">Getting data...</div>)\n\n        if(country.length === 0 || country === 'Select a country'){\n            setInfo(<Loading type='warning'>Select a country!</Loading>)\n        }else{\n            const data = axios.get(`https://restcountries.com/v3.1/name/${country}?fullText=true`)\n            data.then(({data}) => {\n                setInfo(data.map((el:{}, idx: number) => <MountListCountries data={el} key={idx}/> ))\n            }).catch(e => console.error(e));\n        }\n    }, [country])\n\n    return(\n        <section className=\"container\">\n            { info }\n        </section>\n    )\n}\n"],"names":["parseNumber","element","number","toString","split","qtdeDivisor","Math","floor","length","arr","i","ind","push","splice","join","SectionList","_ref","data","children","subdata","_jsxs","className","_jsx","_useState","useState","_useState2","_slicedToArray","nativeName","setNativeName","_useState3","_useState4","currencies","setCurrencies","useEffect","getNative","native","name","concat","style","src","flags","svg","alt","official","common","width","height","coatOfArms","capital","region","subregion","Object","values","languages","symbol","borders","map","border","idx","population","area","tld","country","useSelector","state","info","setInfo","Loading","type","axios","then","el","MountListCountries","catch","e","console","error"],"sourceRoot":""}